{"version":3,"sources":["firebase/index.js","redux/reducers/jobSearchReducer.js","redux/reducers/filterReducer.js","redux/reducers/savedJobsReducer.js","redux/store/index.js","components/header.js","services/history.js","components/button.js","components/entete.js","redux/actions/filters.js","pages/landing.js","redux/actions/searchJobs.js","redux/actions/savedJobs.js","components/savedJobs.js","redux/selectors/sortByText.js","pages/annonser.js","components/jobPost.js","pages/showClickedOnJob.js","router/index.js","pages/app.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","jobSearchReducerDefaultState","state","action","type","results","filterReducerDefaultState","text","sortBy","startDate","undefined","endDate","update","savedJobs","JSON","parse","localStorage","getItem","job","filter","i","identifier","jobs","composeEnhencers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","ButtonAppBar","props","AppBar","className","position","elevation","Toolbar","href","history","createBrowserHistory","MyButton","Button","onClick","connect","useState","textInput","setText","Grid","container","justify","item","xs","title","Paper","component","onSubmit","e","preventDefault","dispatch","sortByText","InputBase","placeholder","onChange","target","value","slice","Math","max","length","useEffect","ref","once","then","data","forEach","result","push","key","val","searchResult","spacing","map","Card","variant","CardContent","Typography","color","gutterBottom","jobPositionTitle","hiringOrg","name","jobPositionLocation","city","postDetail","published","CardActions","to","addToSaved","useStyles","makeStyles","theme","list","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","paper","width","margin","fontSize","pos","marginBottom","links","linK","textDecoration","saved","classes","React","modalShow","setModalShow","Modal","show","size","aria-labelledby","centered","Header","Title","id","Body","element","root","hiringOrgContact","addressLine","split","pop","classification","duration","link","toRemove","splice","setItem","stringify","Footer","textPositionLocationMatch","toLowerCase","includes","sort","a","b","Date","selectData","find","alert","style","TypeOfEmployment","qualificationsRequiredSummary","education","hasExperience","hasDriverLicence","category","jobPositionPurpose","purpose","compensation","salaryType","match","params","Routes","path","exact","Landing","Annonser","JobPost","store","createStore","combineReducers","jobSearchReducer","filterReducer","savedReducer","applyMiddleware","thunk","App","CssBaseline","Container","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b358f45.chunk.js","sourcesContent":["import * as firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey:\n    'AIzaSyAHk7cRgtftDKrf_Z8eZAo4cjFsb0XJ2gE',\n  authDomain: 'expensify-2c9e2.firebaseapp.com',\n  databaseURL:\n    'https://expensify-2c9e2.firebaseio.com',\n  projectId: 'expensify-2c9e2',\n  storageBucket: 'expensify-2c9e2.appspot.com',\n  messagingSenderId: '994745724382',\n  appId:\n    '1:994745724382:web:2ba71d6eced37c3ce9014f',\n  measurementId: 'G-W51K7MZW5M',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database();\n\n\n\n//Add a new job post to dB manually\n\n\n// const newJobPost = {\n//     compensation:{\n//         salaryType: 'Fast månads- vecko- eller timlön'\n//     },\n//   jobPositionPosting: {\n//     id: '23-454545-1234-123-342',\n//     status: 'active',\n//   },\n//   hiringOrg: {\n//     name: 'Fanataz AB',\n//     id: '46-123456-1234',\n//     url: 'http://fantas.org',\n//     description:\n//       'Web and mobile development company',\n//   },\n//   postDetail: {\n//     published: '1 april 2020 at 09:43',\n//     startDate: '2020-06-01',\n//     recruiterName: 'Samatar Ali',\n//     recruiterEmail: 'samatarAli@example.org',\n//   },\n//   jobPositionTitle: {\n//     title: 'Sjuksköterska, grundutbildad',\n//   },\n//   jobPositionPurpose: {\n//     purpose: `DEDICARE söker för längre uppdrag med start omgående och över sommaren tom. v.33. Behovet är tre leg.sjuksköterskor med minst två års yrkeserfarenhet inom HSV/ÄBO/SÄBO.\n//     Vi söker dig med bostadsort inom/nära vgr / södra Sverige. Prova något annat, träffa nya kollegor och samtidigt kompetensutveckla dig. \n//     Utöver konkurrenskraftig lön har vi möjlighet att stå för resor och boende om uppdraget är på annan ort. Då vi har kollektivavtal får du även tjänstepension. Du har viss möjlighet att påverka ditt eget schema. Uppdraget kommer att vara förlagt på rotationsschema dag, kväll, helg och  enbart natt.\n//     Tveka inte att höra av dig så kan vi berätta mer. `,\n//   },\n//   jobPositionLocation: {\n//     city: 'Trollhättan ',\n//     region: 'Västra Götalands län',\n//   },\n//   hiringOrgContact: {\n//     countryCode: 'SE',\n//     postalCode: '11356',\n//     municipality: '2910',\n//     addressLine:\n//       'Ringvägen 100, 11860 , Stockholm',\n//     streetName: 'Ringvägen 100',\n//   },\n//   classification: {\n//     extent: 'Deltid',\n//     duration: 'Tillsvidare',\n//     TypeOfEmployment:\n//       'Tillsvidare- eller tidsbegränsad anställning',\n//   },\n//   qualificationsRequiredSummary: {\n//     education: 'Sjuksköterska, grundutbildad',\n\n//     hasDriverLicence: {\n//       description: '',\n//       category: ' B',\n//     },\n//     hasExperience: {\n//      type: 'erfarenhet efterfrågas',\n//     },\n//     hasACar: {\n//        type:'B',\n//       description: 'Egen bil krävs',\n//     },\n//   },\n\n//   qualificationsPreferredSummary: {\n//     summary: 'Preferred qualifications',\n//   },\n\n//   applicationMethods: {\n//     byWeb: {\n//       url: 'http://fafa.org',\n//     },\n//     byEmail: {\n//       email: 'foo@rerme.org',\n//     },\n//     numberToFill: {\n//       number: 11,\n//     },\n//     hiringOrgDescription: {\n//       description: '',\n//     },\n//     occupationGroup: {\n//       code: 5454,\n//     },\n//   },\n// };\n\n// database.ref('jobPostList').push(newJobPost);\n\nexport { firebase, database as default };","const jobSearchReducerDefaultState = [];\n\nexport default (\n  state = jobSearchReducerDefaultState,\n  action\n) => {\n  switch (action.type) {\n    case 'RETRIVE_RESULTS':\n      return [...action.results];\n    default:\n      return state;\n  }\n};\n","const filterReducerDefaultState = {\n    text: '',\n    sortBy: 'date',\n    startDate: undefined,\n    endDate: undefined,\n  };\n  \n  export default (\n    state = filterReducerDefaultState,\n    action,\n  ) => {\n    switch (action.type) {\n      case 'SET_TEXT_FILTER':\n        return { ...state, ...action.update };\n      case 'SORT_BY_DATE':\n        return {\n          ...state,\n          sortBy: action.sortBy,\n        };\n  \n      case 'START_DATE':\n        return {\n          ...state,\n          startDate: action.startDate,\n        };\n  \n      case 'END_DATE':\n        return {\n          ...state,\n          endDate: action.endDate,\n        };\n  \n      case 'SORT_BY_TEXT':\n        return {\n          ...state,\n          text: action.text,\n        };\n      default:\n        return state;\n    }\n  };","const savedJobs = JSON.parse(\n  localStorage.getItem('savedJobs')\n) || [];\n\nexport default (state = savedJobs, action) => {\n  switch (action.type) {\n    case 'ADD_JOB':\n      return  [...state, action.job];\n\n    case 'REMOVE_JOB':\n      return state.filter(\n        (i) => i.identifier !== action.job.identifier\n      );\n\n    case 'RETRIEVE_JOBS':\n      return [...action.jobs];\n    default:\n      return state;\n  }\n};\n","import {\n    createStore,\n    combineReducers,\n    applyMiddleware,\n    compose,\n  } from 'redux';\n  import thunk from 'redux-thunk';\n  import jobSearchReducer from '../reducers/jobSearchReducer';\n  import filterReducer from '../reducers/filterReducer';\n  import savedReducer from '../reducers/savedJobsReducer';\n  const composeEnhencers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ||\n    compose;\n  \n  export default () => {\n    const store = createStore(\n      combineReducers({\n        results: jobSearchReducer,\n        filter: filterReducer,\n        saved: savedReducer\n      }),\n  \n      composeEnhencers(applyMiddleware(thunk))\n  \n      //Redux devTools\n      // window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      //   window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n  \n    return store;\n  };","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport '../pages/styles/header.scss';\n\nexport default function ButtonAppBar(props) {\n\treturn (\n\t\t<AppBar className='AppBar' position='static' elevation={0}>\n\t\t\t<Toolbar>\n\t\t\t\t<a href='/' className='link'>\n\t\t\t\t\t{' '}\n\t\t\t\t\tKerja{' '}\n\t\t\t\t</a>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n}\n","import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default history;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../pages/styles/myButton.scss';\n\nconst MyButton = (props) => {\n\treturn <Button className='myButton' onClick={props.action}  > {props.text} </Button>;\n};\n\nexport default MyButton;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { sortByText } from '../redux/actions/filters';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '../components/button';\nimport Grid from '@material-ui/core/Grid';\nimport '../pages/styles/entete.scss';\n\nconst Entete = (props) => {\n   const [textInput, setText] = useState('');\n\n\n   return (\n      <div className='entetePage'>\n         <Grid\n            container\n            justify='center'\n            className='blue'>\n            <Grid\n               item\n               xs={12}\n               className='title'>\n               <h1 >\n                  {' '}\n                  {props.title}\n               </h1>\n            </Grid>\n            <Grid\n               item\n               xs={10}\n               className='searchInput'>\n               <Paper\n                  component='form'\n                  className='paper'\n                  onSubmit={(e) => {\n                     e.preventDefault();\n                     props.dispatch(\n                        sortByText({\n                           text: textInput,\n                        })\n                     );\n                     props.onSubmit();\n                  }}>\n                  <InputBase\n                     className='input'\n                     placeholder='Sök efter yrke eller stad'\n                     onChange={(e) => {\n                        setText(e.target.value);\n                     }}\n                  />\n\n                  <Button\n                     type='submit'\n                     text={'Sök'}\n                     className='btnSearch'\n                     />\n               </Paper>\n            </Grid>\n         </Grid>\n      </div>\n   );\n};\n\nexport default connect()(Entete);\n","export const sortByText = ({ text = '' } = {}) => ({\n    type: 'SORT_BY_TEXT',\n    text,\n  });","import React, { useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Entete from '../components/entete';\nimport { startSearchResults } from '../redux/actions/searchJobs';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '../components/button';\nimport Typography from '@material-ui/core/Typography';\nimport './styles/landing.scss';\n\nconst Landing = (props) => {\nuseEffect(() => {\nprops.dispatch(startSearchResults());\n}, [props]);\n\nconst handleSubmit = () => {\nprops.history.push('/annonser');\n};\n\nreturn (\n<Route>\n<div className='landingPage'>\n<Entete title={'Sök'} onSubmit={handleSubmit} />\n\n<Grid container justify='center' className='list'>\n<Grid item xs={12} className='secondHeader'>\n<h1> Sista inläggen </h1>\n</Grid>\n<Grid className='cardContainer' item xs={12}>\n<Grid container justify='center' spacing={2}>\n{props.results.map((item) => (\n<Grid\nkey={item.identifier}\nclassName='carte'\nitem>\n<Paper>\n<Card variant='outlined'>\n<CardContent>\n<Typography\ncolor='textSecondary'\ngutterBottom>\nNy\n</Typography>\n<Typography\nvariant='h5'\ncomponent='h2'>\n{item.jobPositionTitle.title}\n</Typography>\n<Typography\nclassName='pos'\ncolor='textSecondary'>\n{`${item.hiringOrg.name} - ${item.jobPositionLocation.city}`}\n</Typography>\n<Typography\nvariant='body2'\ncomponent='p'>\n{`Start datum: ${item.postDetail.startDate}`}\n</Typography>\n<Typography\nvariant='body2'\ncomponent='p'>\n{`Published: ${item.postDetail.published}`}\n</Typography>\n</CardContent>\n<CardActions>\n<Link\nto={`/annonser/${item.identifier}`}>\n<Button text={'Läs mer'} />\n</Link>\n</CardActions>\n</Card>\n</Paper>\n</Grid>\n))}\n</Grid>\n</Grid>\n</Grid>\n</div>\n</Route>\n);\n};\n\nconst propsToState = (state) => {\nreturn {\n// Get the last 4 elements of the array\nresults: state.results.slice(\nMath.max(state.results.length - 4, 0)\n),\n};\n};\n\nexport default connect(propsToState)(Landing);\n","import database from '../../firebase/index';\n   \nexport const searchResult = (results) => ({\n  type: 'RETRIVE_RESULTS',\n  results,\n});\n\nexport const startSearchResults = () => {\n  return (dispatch) => {\n    return database\n      .ref('jobPostList')\n      .once('value')\n      .then((data) => {\n        const results = [];\n        data.forEach((result) => {\n          results.push({\n            identifier: result.key,\n            ...result.val(),\n          });\n        });\n\n        dispatch(searchResult(results));\n      });\n  };\n};\n","export const addToSaved = (job) => ({\n  type: 'ADD_JOB',\n  job,\n});\n\nexport const retriveSavedJobs = (jobs) => ({\n  type: 'RETRIEVE_JOBS',\n  jobs,\n});\n\nexport const removeFromSavedJobs = ({ identifier }) => ({\n  type: 'REMOVE_JOB',\n  job: {\n    identifier\n  },\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from '../components/button';\nimport { removeFromSavedJobs } from '../redux/actions/savedJobs';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    backgroundColor: '#fff',\n    borderBottomLeftRadius: '1rem',\n    borderBottomRightRadius: '1rem',\n  },\n  paper: {\n    width: '90%',\n    margin: '0 auto',\n  },\n\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n\n  links: {\n    backgroundColor: '#13377F',\n  },\n  linK: {\n    textDecoration: 'none',\n    color: '#fff',\n  },\n}));\n\nconst SavedJobs = (props) => {\n  const classes = useStyles();\n  const [\n    modalShow,\n    setModalShow,\n  ] = React.useState(false);\n\n  return (\n    <div>\n      <Button\n        text={`${props.saved.length} sparade`}\n        action={() => setModalShow(true)}/>\n        \n      \n\n      <Modal\n        show={modalShow}\n        size='lg'\n        aria-labelledby='contained-modal-title-vcenter'\n        centered>\n        <Modal.Header>\n          <Modal.Title id='contained-modal-title-vcenter'>\n            Sparade\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {props.saved[0] && props.saved.map((element) => (\n            <Grid\n              key={element.identifier}\n              className={classes.paper}\n              item>\n              <Paper className={classes.paper}>\n                <Card\n                  className={classes.root}\n                  variant='outlined'>\n                  <CardContent>\n                    <Typography\n                      variant='h5'\n                      component='h2'>\n                      {\n                        element.jobPositionTitle\n                          .title\n                      }\n                    </Typography>\n                    <Typography\n                      className={classes.pos}\n                      color='textSecondary'>\n                      {element.hiringOrg.name} -{' '}\n                      {element.hiringOrgContact.addressLine\n                        .split(',')\n                        .pop()}\n                    </Typography>\n                    <Typography component='h5'>\n                      {\n                        element.jobPositionTitle\n                          .title\n                      }\n                    </Typography>\n\n                    <Typography component='p'>\n                      {` Duration: ${element.classification.duration}`}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                    text={'Läs mer'}\n                      className={classes.links}>\n                      <Link\n                        to={`/annonser/${element.identifier}`}\n                        className={classes.link}>\n                        \n                      </Link>\n                    </Button>\n                    <Button\n                    text={'Radera'}\n                      action={() => {\n                        props.dispatch(\n                          removeFromSavedJobs(\n                            element\n                          )\n                        );\n\n                        const toRemove = JSON.parse(\n                          localStorage.getItem(\n                            'savedJobs'\n                          )\n                        );\n                        \n                        toRemove.splice(\n                          element,\n                          1\n                        );\n                        localStorage.setItem(\n                          'savedJobs',\n                          JSON.stringify(toRemove)\n                        );\n                        setModalShow(false);\n                      }} />\n            \n                  </CardActions>\n                </Card>\n              </Paper>\n            </Grid>\n          ))}\n\n          {props.saved[0] === undefined && <p> You have no saved jobs </p>  }\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n          text={'Stäng'}\n            action={() => {\n              setModalShow(false);\n            }}/>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nconst toProps = (state) => {\n  return {\n    saved: state.saved,\n  };\n};\n\nexport default connect(toProps)(SavedJobs);","export default (jobs, { text }) => {\n  return (\n    jobs\n      .filter((job) => {\n          \n        const textPositionLocationMatch = job.jobPositionLocation.city\n          .toLowerCase()\n          .includes(text.toLowerCase());\n        const textMatch = job.jobPositionTitle.title\n          .toLowerCase()\n          .includes(text.toLowerCase());\n\n        return (\n          textMatch ||\n          textPositionLocationMatch\n        );\n      })\n      // eslint-disable-next-line array-callback-return\n      .sort((a, b) => {\n          \n        return new Date(a.postDetail.published) <\n          new Date(b.postDetail.published)\n          ? 1\n          : -1;\n      })\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addToSaved } from '../redux/actions/savedJobs';\nimport SavedJobs from '../components/savedJobs';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Entete from '../components/entete';\nimport Button from '../components/button';\nimport selectData from '../redux/selectors/sortByText';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './styles/annonser.scss';\nconst useStyles = makeStyles((theme) => ({\ntitle: {\nfontSize: 14,\n},\npos: {\nmarginBottom: 12,\n},\n}));\n\nconst Annonser = (props) => {\nconst classes = useStyles();\n\nreturn (\n<>\n<Entete\ntitle={`Hittade: ${props.results.length}`}\nonSubmit={() => {}}\n/>\n<Grid container justify='center' className='annonsWrapper'>\n<Grid item xs={12} className='savedJob'>\n<SavedJobs />\n</Grid>\n\n<Grid item xs={12}>\n<Grid container justify='center' spacing={2}>\n{props.results.map((item) => (\n    <Grid key={item.identifier} xs={12} item>\n        <Paper className={classes.paper}>\n            <Card variant='outlined'>\n                <CardContent>\n                    <Typography\n                        variant='h5'\n                        component='h2'>\n                        {item.jobPositionTitle.title}\n                    </Typography>\n                    <Typography\n                        className={classes.pos}\n                        color='textSecondary'>\n                        {item.hiringOrg.name} -{' '}\n                        {item.hiringOrgContact.addressLine\n                            .split(',')\n                            .pop()}\n                    </Typography>\n                    <Typography component='h5'>\n                        {item.jobPositionTitle.title}\n                    </Typography>\n\n                    <Typography component='p'>\n                        {` Duration: ${item.classification.duration}`}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Link\n                        to={`/annonser/${item.identifier}`}>\n                        <Button text={'See more'} />\n                    </Link>\n\n                    <Button\n                        text={'Save'}\n                        action={() => {\n                            const savedJobs = JSON.parse(\n                                localStorage.getItem(\n                                    'savedJobs'\n                                )\n                            );\n\n                            // if SavedJobs is empty\n\n                            if (!savedJobs) {\n                                props.dispatch(\n                                    addToSaved(item)\n                                );\n                                localStorage.setItem(\n                                    'savedJobs',\n                                    JSON.stringify([item])\n                                );\n\n\n                            } else {\n                            const check = savedJobs.find(\n                                (element) =>\n                                    element.identifier ===\n                                    item.identifier\n                            );\n\n\n                            if (check === undefined) {\n                                props.dispatch(\n                                    addToSaved(item)\n                                );\n                                localStorage.setItem(\n                                    'savedJobs',\n                                    JSON.stringify([item])\n                                );\n                            } else {\n                                alert('Redan sparade')\n                            }\n                           }\n                        }}\n                    />\n                </CardActions>\n            </Card>\n        </Paper>\n    </Grid>\n))}\n</Grid>\n</Grid>\n</Grid>\n</>\n);\n};\n\nconst mapPropsToTheState = (state) => {\nreturn {\nresults: selectData(state.results, state.filter),\n};\n};\n\nexport default connect(mapPropsToTheState)(Annonser);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addToSaved } from '../redux/actions/savedJobs';\nimport Button from './button';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../pages/styles/jobPost.scss';\n\nconst JobPost = (props) => {\n\treturn (\n\t\t<div className='jobPostWrapper'>\n\t\t\t<Paper>\n\t\t\t\t<Card variant='outlined'>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant='h4'\n\t\t\t\t\t\t\tcomponent='h3'\n\t\t\t\t\t\t\tclassName='boldTitle'>\n\t\t\t\t\t\t\t{props.jobPositionTitle.title}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant='h4' component='h3'>\n\t\t\t\t\t\t\t{props.hiringOrg.name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant='h5' component='h2'>\n\t\t\t\t\t\t\t{props.jobPositionTitle.title}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography style={{ margin: '3px' }}>\n\t\t\t\t\t\t\t{`Kommun: ${props.hiringOrgContact.addressLine\n\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t.pop()} `}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography style={{ margin: '3px' }}>\n\t\t\t\t\t\t\t{`Varaktighet: ${props.classification.duration}`}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t{`Anställningsform: ${props.classification.TypeOfEmployment}`}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Paper className='elevatedCard' elevation={3}>\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<h2 className='boldTitle'>\n\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\tKvalifikationer{' '}\n\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t{props.qualificationsRequiredSummary\n\t\t\t\t\t\t\t\t\t\t\t.education && (\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t{`- ${props.qualificationsRequiredSummary.education}`}{' '}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t{props.qualificationsRequiredSummary\n\t\t\t\t\t\t\t\t\t\t\t.hasExperience.type && (\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t{`- ${props.qualificationsRequiredSummary.hasExperience.type}`}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{props.qualificationsRequiredSummary\n\t\t\t\t\t\t\t\t\t\t\t.hasDriverLicence.category && (\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t{` - Driver licence: ${\n\t\t\t\t\t\t\t\t\t\t\t\t\tprops\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.qualificationsRequiredSummary\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.hasDriverLicence\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.category || 'ingen'\n\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t<div className='jobDescription'>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h2 className='boldTitle'>Om jobbet :</h2>\n\t\t\t\t\t\t\t\t{props.jobPositionPurpose.purpose}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='anstallning'>\n\t\t\t\t\t\t\t\t<h2 className='boldTitle'>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\tOm anställningen :{' '}\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t{`Lön: ${props.compensation.salaryType}`}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h2 className='boldTitle'> Adress : </h2>\n\t\t\t\t\t\t\t\t{props.hiringOrgContact.addressLine}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</CardContent>\n\n                    <CardActions>\n                 \n                    <Button\n                        text={'Save'}\n                        action={() => {\n                            const savedJobs = JSON.parse(\n                                localStorage.getItem(\n                                    'savedJobs'\n                                )\n                            );\n\n                            // if SavedJobs is empty\n\n                            if (!savedJobs) {\n                                props.dispatch(\n                                    addToSaved(props)\n                                );\n                                localStorage.setItem(\n                                    'savedJobs',\n                                    JSON.stringify([props])\n                                );\n\n\n                            } else {\n                            const check = savedJobs.find(\n                                (element) =>\n                                    element.identifier ===\n                                    props.identifier\n                            );\n\n\n                            if (check === undefined) {\n                                props.dispatch(\n                                    addToSaved(props)\n                                );\n                                localStorage.setItem(\n                                    'savedJobs',\n                                    JSON.stringify([props])\n                                );\n                            } else {\n                                alert('Redan sparade')\n                            }\n                           }\n                        }}\n                    />\n                    </CardActions>\n\t\t\t\t</Card>\n\t\t\t</Paper>\n\t\t</div>\n\t);\n};\n\nexport default connect()(JobPost);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SavedJobs from '../components/savedJobs';\nimport JobPost from '../components/jobPost';\nimport Button from '../components/button';\nimport './styles/clickOnJob.scss';\n\n\nconst PostedJob = (props) => {\n\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='btnContainer'>\n\t\t\t\t<div className='back'>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttext={'Gå tillbaka till resultaten'}\n\t\t\t\t\t\taction={() => {\n\t\t\t\t\t\t\tprops.history.push(\n\t\t\t\t\t\t\t\t'/annonser'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='savedJobs'>\n\t\t\t\t\t<SavedJobs />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<JobPost {...props.result} />\n\t\t</div>\n\t);\n};\n\nconst mapPropsTo = (state, props) => {\n\treturn {\n\t\tresult: state.results.find((element) => {\n\t\t\treturn (\n\t\t\t\telement.identifier ===\n\t\t\t\tprops.match.params.id\n\t\t\t);\n\t\t}),\n\t};\n};\n\nexport default connect(mapPropsTo)(PostedJob);\n","import React from 'react';\nimport {\n  Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport history from '../services/history';\nimport Landing from '../pages/landing';\nimport Annonser from '../pages/annonser';\nimport JobPost   from '../pages/showClickedOnJob';\n\nexport default function Routes() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route\n          path='/'\n          exact\n          component={Landing}\n        />\n        {\n          <Route\n            exact\n            path='/annonser'\n            component={Annonser}\n          />\n        }\n        {\n          <Route\n            path='/annonser/:id'\n            component={JobPost}\n          />\n        }\n      \n\n    \n      </Switch>\n    </Router>\n  );\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../firebase/index';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport storage from '../redux/store/index';\nimport { Provider } from 'react-redux';\nimport Header from '../components/header';\nimport Routes from '../router/index';\nimport Container from '@material-ui/core/Container';\nconst store = storage();\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <CssBaseline />\n      <Container  maxWidth='lg'>\n        <Header />\n        <Routes />\n      </Container>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss'\nimport App from './pages/app'\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}