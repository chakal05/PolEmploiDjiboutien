{"version":3,"sources":["firebase/index.js","redux/reducers/jobSearchReducer.js","redux/reducers/filterReducer.js","redux/reducers/savedJobsReducer.js","redux/store/index.js","services/history.js","redux/actions/savedJobs.js","components/button.js","components/jobPostList.js","redux/actions/filters.js","components/entete.js","pages/landing.js","redux/actions/searchJobs.js","components/savedJobs.js","redux/selectors/sortJob.js","components/select.js","pages/annonser.js","pages/showClickedOnJob.js","components/header.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","jobSearchReducerDefaultState","state","action","type","results","filterReducerDefaultState","text","jobType","published","city","savedJobs","JSON","parse","localStorage","getItem","job","filter","i","identifier","composeEnhencers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","history","createBrowserHistory","addToSaved","MyButton","props","Button","className","onClick","connect","map","item","Grid","key","Paper","Card","variant","CardContent","Typography","component","jobPositionTitle","title","color","hiringOrg","name","jobPositionLocation","classification","duration","moment","postDetail","format","CardActions","to","toRemove","dispatch","splice","setItem","stringify","element","length","alert","toAdd","push","sortbyJobType","sortByPublishedDay","sortbyCity","useState","textInput","setText","container","justify","xs","onSubmit","e","preventDefault","sortByText","InputBase","placeholder","onChange","target","value","slice","Math","max","useEffect","ref","once","then","data","forEach","result","val","searchResult","spacing","gutterBottom","startDate","saved","React","modalShow","setModalShow","Modal","show","size","aria-labelledby","centered","Header","Title","id","Body","style","textAlign","Footer","jobs","textPositionLocationMatch","toLowerCase","includes","textResult","typeOfJobs","extent","match","date","flag","getByCity","publishedDay","Date","getTime","sort","a","b","useStyles","makeStyles","theme","formControl","margin","minWidth","Dropdown","classes","open","setOpen","FormControl","InputLabel","Select","labelId","onClose","onOpen","handleChange","options","index","MenuItem","selectData","setCity","setType","setPublished","event","console","log","day","substr","day_7","subtract","day_30","find","params","TypeOfEmployment","elevation","qualificationsRequiredSummary","education","hasExperience","hasDriverLicence","category","jobPositionPurpose","purpose","compensation","salaryType","hiringOrgContact","addressLine","ButtonAppBar","AppBar","position","Toolbar","storage","createStore","combineReducers","jobSearchReducer","filterReducer","savedReducer","applyMiddleware","thunk","App","store","CssBaseline","Container","maxWidth","path","exact","Landing","Annonser","JobPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3000450.chunk.js","sourcesContent":["import * as firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey:\n    'AIzaSyAHk7cRgtftDKrf_Z8eZAo4cjFsb0XJ2gE',\n  authDomain: 'expensify-2c9e2.firebaseapp.com',\n  databaseURL:\n    'https://expensify-2c9e2.firebaseio.com',\n  projectId: 'expensify-2c9e2',\n  storageBucket: 'expensify-2c9e2.appspot.com',\n  messagingSenderId: '994745724382',\n  appId:\n    '1:994745724382:web:2ba71d6eced37c3ce9014f',\n  measurementId: 'G-W51K7MZW5M',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database();\n\n\n\n//Add a new job post to dB manually\n\n\n// const newJobPost = {\n//     compensation:{\n//         salaryType: 'Fast månads- vecko- eller timlön'\n//     },\n//   jobPositionPosting: {\n//     id: '23-454545-1234-123-342',\n//     status: 'active',\n//   },\n//   hiringOrg: {\n//     name: 'Fanataz AB',\n//     id: '46-123456-1234',\n//     url: 'http://fantas.org',\n//     description:\n//       'Web and mobile development company',\n//   },\n//   postDetail: {\n//     published: '1 april 2020 at 09:43',\n//     startDate: '2020-06-01',\n//     recruiterName: 'Samatar Ali',\n//     recruiterEmail: 'samatarAli@example.org',\n//   },\n//   jobPositionTitle: {\n//     title: 'Sjuksköterska, grundutbildad',\n//   },\n//   jobPositionPurpose: {\n//     purpose: `DEDICARE söker för längre uppdrag med start omgående och över sommaren tom. v.33. Behovet är tre leg.sjuksköterskor med minst två års yrkeserfarenhet inom HSV/ÄBO/SÄBO.\n//     Vi söker dig med bostadsort inom/nära vgr / södra Sverige. Prova något annat, träffa nya kollegor och samtidigt kompetensutveckla dig. \n//     Utöver konkurrenskraftig lön har vi möjlighet att stå för resor och boende om uppdraget är på annan ort. Då vi har kollektivavtal får du även tjänstepension. Du har viss möjlighet att påverka ditt eget schema. Uppdraget kommer att vara förlagt på rotationsschema dag, kväll, helg och  enbart natt.\n//     Tveka inte att höra av dig så kan vi berätta mer. `,\n//   },\n//   jobPositionLocation: {\n//     city: 'Trollhättan ',\n//     region: 'Västra Götalands län',\n//   },\n//   hiringOrgContact: {\n//     countryCode: 'SE',\n//     postalCode: '11356',\n//     municipality: '2910',\n//     addressLine:\n//       'Ringvägen 100, 11860 , Stockholm',\n//     streetName: 'Ringvägen 100',\n//   },\n//   classification: {\n//     extent: 'Deltid',\n//     duration: 'Tillsvidare',\n//     TypeOfEmployment:\n//       'Tillsvidare- eller tidsbegränsad anställning',\n//   },\n//   qualificationsRequiredSummary: {\n//     education: 'Sjuksköterska, grundutbildad',\n\n//     hasDriverLicence: {\n//       description: '',\n//       category: ' B',\n//     },\n//     hasExperience: {\n//      type: 'erfarenhet efterfrågas',\n//     },\n//     hasACar: {\n//        type:'B',\n//       description: 'Egen bil krävs',\n//     },\n//   },\n\n//   qualificationsPreferredSummary: {\n//     summary: 'Preferred qualifications',\n//   },\n\n//   applicationMethods: {\n//     byWeb: {\n//       url: 'http://fafa.org',\n//     },\n//     byEmail: {\n//       email: 'foo@rerme.org',\n//     },\n//     numberToFill: {\n//       number: 11,\n//     },\n//     hiringOrgDescription: {\n//       description: '',\n//     },\n//     occupationGroup: {\n//       code: 5454,\n//     },\n//   },\n// };\n\n// database.ref('jobPostList').push(newJobPost);\n\nexport { firebase, database as default };","const jobSearchReducerDefaultState = [];\n\nexport default (\n\tstate = jobSearchReducerDefaultState,\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase 'RETRIEVE_RESULTS':\n\t\t\treturn [...action.results];\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","const filterReducerDefaultState = {\n\ttext: '',\n    jobType:'',\n    published:[],\n    city:''\n};\n\nexport default (state = filterReducerDefaultState, action) => {\n\tswitch (action.type) {\n\n\t\tcase 'SORT_BY_TEXT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttext: action.text,\n            };\n            case 'SORT_BY_JOBTYPE':\n                return {\n                    ...state,\n                    jobType: action.jobType,\n                };\n            \n            case 'SORT_BY_PUBLISHED_DAY':\n                return{\n                    ...state,\n                    published: action.published\n                }\n\n            case 'SORT_BY_CITY':\n                return {\n                    ...state,\n                    city: action.city\n                }\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","const savedJobs =\n\tJSON.parse(\n\t\tlocalStorage.getItem('savedJobs')\n\t) || [];\n\nexport default (state = savedJobs, action) => {\n\tswitch (action.type) {\n\t\tcase 'ADD_JOB':\n\t\t\treturn [...state, action.job];\n\n\t\tcase 'REMOVE_JOB':\n\t\t\treturn state.filter(\n\t\t\t\t(i) =>\n\t\t\t\t\ti.identifier !==\n\t\t\t\t\taction.job.identifier\n\t\t\t);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import {\n\tcreateStore,\n\tcombineReducers,\n\tapplyMiddleware,\n\tcompose,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport jobSearchReducer from '../reducers/jobSearchReducer';\nimport filterReducer from '../reducers/filterReducer';\nimport savedReducer from '../reducers/savedJobsReducer';\nconst composeEnhencers =\n\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ||\n\tcompose;\n\nexport default () => {\n\tconst store = createStore(\n\t\tcombineReducers({\n\t\t\tresults: jobSearchReducer,\n\t\t\tfilter: filterReducer,\n\t\t\tsaved: savedReducer,\n\t\t}),\n\n\t\tcomposeEnhencers(applyMiddleware(thunk))\n\n\t\t//Redux devTools\n\t\t// window.__REDUX_DEVTOOLS_EXTENSION__ &&\n\t\t//   window.__REDUX_DEVTOOLS_EXTENSION__()\n\t);\n\n\treturn store;\n};\n","import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default history;","export const addToSaved = (job) => ({\n\ttype: 'ADD_JOB',\n\tjob,\n});\n\nexport const removeFromSavedJobs = ({\n\tidentifier,\n}) => ({\n\ttype: 'REMOVE_JOB',\n\tjob: {\n\t\tidentifier,\n\t},\n});\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../pages/styles/myButton.scss';\n\nconst MyButton = (props) => {\n\treturn (\n\t\t<Button\n\t\t\tclassName='myButton'\n\t\t\tonClick={props.action}>\n\t\t\t{' '}\n\t\t\t{props.text}{' '}\n\t\t</Button>\n\t);\n};\n\nexport default MyButton;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport {\n\taddToSaved,\n\tremoveFromSavedJobs,\n} from '../redux/actions/savedJobs';\nimport Button from '../components/button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst jobPostList = (props) => {\n\treturn (\n\t\t<>\n\t\t\t{props.results.map((item) => (\n\t\t\t\t<Grid key={item.identifier} item>\n\t\t\t\t\t<Paper>\n\t\t\t\t\t\t<Card variant='outlined'>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName='jobTitle'\n\t\t\t\t\t\t\t\t\tvariant='h5'\n\t\t\t\t\t\t\t\t\tcomponent='h2'>\n\t\t\t\t\t\t\t\t\t{item.jobPositionTitle.title}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName='pos'\n\t\t\t\t\t\t\t\t\tcolor='textSecondary'>\n\t\t\t\t\t\t\t\t\t{item.hiringOrg.name} -{' '}\n\t\t\t\t\t\t\t\t\t{item.jobPositionLocation.city}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography component='h5'>\n\t\t\t\t\t\t\t\t\t{item.jobPositionTitle.title}\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Typography component='p'>\n\t\t\t\t\t\t\t\t\t{` Duration: ${item.classification.duration}`}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant='body2' component='p'>\n\t\t\t\t\t\t\t\t\t{`Published: ${moment(\n\t\t\t\t\t\t\t\t\t\titem.postDetail.published\n\t\t\t\t\t\t\t\t\t).format('MMM Do YYYY')}`}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<Link to={`/annonser/${item.identifier}`}>\n\t\t\t\t\t\t\t\t\t<Button text={'Läs mer'} />\n\t\t\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttext={props.text}\n\t\t\t\t\t\t\t\t\taction={() => {\n\t\t\t\t\t\t\t\t\t\tconst savedJobs = JSON.parse(\n\t\t\t\t\t\t\t\t\t\t\tlocalStorage.getItem('savedJobs')\n                                        );\n                                        \n\t\t\t\t\t\t\t\t\t\t// Remove item\n\n\t\t\t\t\t\t\t\t\t\tif (props.text === 'Radera') {\n\t\t\t\t\t\t\t\t\t\t\tconst toRemove = savedJobs;\n\t\t\t\t\t\t\t\t\t\t\tprops.dispatch(\n\t\t\t\t\t\t\t\t\t\t\t\tremoveFromSavedJobs(item)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\ttoRemove.splice(item, 1);\n\t\t\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t\t\t\t\t\t\t'savedJobs',\n\t\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(toRemove)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Add item\n\n\t\t\t\t\t\t\t\t\t\tif (props.text === 'Spara') {\n\t\t\t\t\t\t\t\t\t\t\tconst check = savedJobs.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t(element) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\telement.identifier ===\n\t\t\t\t\t\t\t\t\t\t\t\t\titem.identifier\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\tif (check.length === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst toAdd = savedJobs;\n\t\t\t\t\t\t\t\t\t\t\t\tprops.dispatch(addToSaved(item));\n\n\t\t\t\t\t\t\t\t\t\t\t\ttoAdd.push(item);\n\t\t\t\t\t\t\t\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'savedJobs',\n\t\t\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(toAdd)\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\treturn alert('Redan sparade');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default connect()(jobPostList);\n","export const sortByText = ({ text = '' } = {}) => ({\n\ttype: 'SORT_BY_TEXT',\n\ttext,\n});\n\nexport const sortbyJobType = ({ jobType = '' } = {}) => ({\n\ttype: 'SORT_BY_JOBTYPE',\n\tjobType,\n});\n\nexport const sortByPublishedDay = ({ published = [] } = {}) => ({\n\ttype: 'SORT_BY_PUBLISHED_DAY',\n\tpublished,\n});\n\nexport const sortbyCity = ({ city = '' } = {}) => ({\n\ttype: 'SORT_BY_CITY',\n\tcity,\n});\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { sortByText } from '../redux/actions/filters';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport '../pages/styles/entete.scss';\n\nconst Entete = (props) => {\n\tconst [textInput, setText] = useState('');\n\n\treturn (\n\t\t<div className='entetePage'>\n\t\t\t<Grid container justify='center' className='blue'>\n\t\t\t\t<Grid item xs={12} className='title'>\n\t\t\t\t\t<h1> {props.title}</h1>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={10} className='searchInput'>\n\t\t\t\t\t<Paper\n\t\t\t\t\t\tcomponent='form'\n\t\t\t\t\t\tclassName='paper'\n\t\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tprops.dispatch(\n\t\t\t\t\t\t\t\tsortByText({\n\t\t\t\t\t\t\t\t\ttext: textInput,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tprops.onSubmit();\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\tclassName='input'\n\t\t\t\t\t\t\tplaceholder='Sök efter yrke eller stad'\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetText(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tclassName='btnSearch'>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\tSok{' '}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default connect()(Entete);\n","import React, { useEffect } from 'react';\nimport JobPostList from '../components/jobPostList';\nimport { Route, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Entete from '../components/entete';\nimport { startSearchResults } from '../redux/actions/searchJobs';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '../components/button';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport './styles/landing.scss';\n\nconst Landing = (props) => {\n\tconst { dispatch } = props;\n\tuseEffect(() => {\n\t\tdispatch(startSearchResults());\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [dispatch]);\n\n\treturn (\n\t\t<Route>\n\t\t\t<div className='landingPage'>\n\t\t\t\t<Entete\n\t\t\t\t\ttitle={'Sök'}\n\t\t\t\t\tonSubmit={() => {\n\t\t\t\t\t\tprops.history.push('/annonser');\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tjustify='center'\n\t\t\t\t\tclassName='landingPageWrapper'>\n\t\t\t\t\t<Grid item xs={12} className='pageHeader'>\n\t\t\t\t\t\t<h1> Sista inläggen </h1>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid className='cardContainer' item xs={12}>\n\t\t\t\t\t\t<Grid container justify='center' spacing={2}>\n\t\t\t\t\t\t\t{props.results.map((item) => (\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\tkey={item.identifier}\n\t\t\t\t\t\t\t\t\tclassName='jobPostCard'\n\t\t\t\t\t\t\t\t\titem>\n\t\t\t\t\t\t\t\t\t<Paper>\n\t\t\t\t\t\t\t\t\t\t<Card variant='outlined'>\n\t\t\t\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='textSecondary'\n\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom>\n\t\t\t\t\t\t\t\t\t\t\t\t\tNy\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='h5'\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent='h2'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.jobPositionTitle.title}\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography color='textSecondary'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{`${item.hiringOrg.name} - ${item.jobPositionLocation.city}`}\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='body2'\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent='p'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{`Start datum: ${item.postDetail.startDate}`}\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='body2'\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent='p'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{`Published: ${item.postDetail.published}`}\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/annonser/${item.identifier}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button text={'Läs mer'} />\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} className='pageHeader'>\n\t\t\t\t\t\t{!props.results[0] && <h2>Loading ...</h2>}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</Route>\n\t);\n};\n\nconst propsToState = (state) => {\n\treturn {\n\t\t// Get the last 4 elements of the array\n\t\tresults: state.results.slice(\n\t\t\tMath.max(state.results.length - 4, 0)\n\t\t),\n\t};\n};\n\nexport default connect(propsToState)(Landing);\n","import database from '../../firebase/index';\n\nexport const searchResult = (results) => ({\n\ttype: 'RETRIEVE_RESULTS',\n\tresults,\n});\n\nexport const startSearchResults = () => {\n\treturn (dispatch) => {\n\t\treturn database\n\t\t\t.ref('jobPostList')\n\t\t\t.once('value')\n\t\t\t.then((data) => {\n\t\t\t\tconst results = [];\n\t\t\t\tdata.forEach((result) => {\n\t\t\t\t\tresults.push({\n\t\t\t\t\t\tidentifier: result.key,\n\t\t\t\t\t\t...result.val(),\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tdispatch(searchResult(results));\n\t\t\t});\n\t};\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from '../components/button';\nimport JobPostList from './jobPostList';\n\nconst SavedJobs = (props) => {\n\tconst [modalShow, setModalShow] = React.useState(false);\n\n\treturn (\n\t\t<div>\n\t\t\t<Button\n\t\t\t\ttext={`${props.saved.length} sparade`}\n\t\t\t\taction={() => (props.saved[0] ? setModalShow(true) : '')}\n\t\t\t/>\n\n\t\t\t<Modal\n\t\t\t\tshow={modalShow}\n\t\t\t\tsize='lg'\n\t\t\t\taria-labelledby='contained-modal-title-vcenter'\n\t\t\t\tcentered>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title id='contained-modal-title-vcenter'>\n\t\t\t\t\t\tSparade\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<JobPostList results={props.saved} text={'Radera'} />\n\n\t\t\t\t\t{!props.saved[0] && (\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t<h5 style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\tInga sparade annonser{' '}\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</i>\n\t\t\t\t\t)}\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttext={'Stäng'}\n\t\t\t\t\t\taction={() => {\n\t\t\t\t\t\t\tsetModalShow(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n};\n\nconst toProps = (state) => {\n\treturn {\n\t\tsaved: state.saved,\n\t};\n};\n\nexport default connect(toProps)(SavedJobs);\n","export default (jobs, { text, jobType, published, city }) => {\n\treturn (\n\t\tjobs\n\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t.filter((job) => {\n\t\t\t\tconst textPositionLocationMatch = job.jobPositionLocation.city\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.includes(text.toLowerCase());\n\t\t\t\tconst textMatch = job.jobPositionTitle.title\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.includes(text.toLowerCase());\n\t\t\t\tconst textResult = textMatch || textPositionLocationMatch;\n\t\t\t\tconst typeOfJobs = job.classification.extent.match(\n\t\t\t\t\tjobType\n\t\t\t\t);\n\t\t\t\tconst [date, flag] = published;\n\t\t\t\tconst getByCity = job.jobPositionLocation.city\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.match(city.toLowerCase());\n\n\t\t\t\tconst publishedDay = () => {\n\t\t\t\t\tswitch (flag) {\n\t\t\t\t\t\tcase 'all':\n\t\t\t\t\t\t\treturn job;\n\t\t\t\t\t\tcase 'today':\n\t\t\t\t\t\t\treturn job.postDetail.published.match(date);\n\n\t\t\t\t\t\tcase 'last_7_days':\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tnew Date(\n\t\t\t\t\t\t\t\t\tjob.postDetail.published\n\t\t\t\t\t\t\t\t).getTime() >= new Date(date).getTime()\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tcase 'last_30_days':\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tnew Date(\n\t\t\t\t\t\t\t\t\tjob.postDetail.published\n\t\t\t\t\t\t\t\t).getTime() >= new Date(date).getTime()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tif (text) {\n\t\t\t\t\tif (jobType) {\n\t\t\t\t\t\treturn textResult && typeOfJobs;\n\t\t\t\t\t} else if (date) {\n\t\t\t\t\t\treturn textResult && publishedDay();\n\t\t\t\t\t} else if (city) {\n\t\t\t\t\t\treturn textResult && getByCity;\n\t\t\t\t\t} else if (jobType && date) {\n\t\t\t\t\t\treturn textResult && typeOfJobs && publishedDay();\n\t\t\t\t\t} else if (date && jobType && city) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\ttextResult &&\n\t\t\t\t\t\t\ttypeOfJobs &&\n\t\t\t\t\t\t\tpublishedDay() &&\n\t\t\t\t\t\t\tgetByCity\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn textResult;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (jobType) {\n\t\t\t\t\tif (date) {\n\t\t\t\t\t\treturn typeOfJobs && publishedDay();\n\t\t\t\t\t} else if (text) {\n\t\t\t\t\t\treturn textResult && typeOfJobs;\n\t\t\t\t\t} else if (city) {\n\t\t\t\t\t\treturn typeOfJobs && getByCity;\n\t\t\t\t\t} else if (date && text) {\n\t\t\t\t\t\treturn typeOfJobs && textResult && publishedDay();\n\t\t\t\t\t} else if (date && text && city) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\ttextResult &&\n\t\t\t\t\t\t\ttypeOfJobs &&\n\t\t\t\t\t\t\tgetByCity &&\n\t\t\t\t\t\t\tpublishedDay()\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn typeOfJobs;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (date) {\n\t\t\t\t\tif (text) {\n\t\t\t\t\t\treturn textResult && publishedDay();\n\t\t\t\t\t} else if (jobType) {\n\t\t\t\t\t\treturn typeOfJobs && publishedDay();\n\t\t\t\t\t} else if (city) {\n\t\t\t\t\t\treturn publishedDay() && getByCity;\n\t\t\t\t\t} else if (text && jobType) {\n\t\t\t\t\t\treturn textResult && typeOfJobs && publishedDay();\n\t\t\t\t\t} else if (text && jobType && city) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\ttextResult &&\n\t\t\t\t\t\t\ttypeOfJobs &&\n\t\t\t\t\t\t\tgetByCity &&\n\t\t\t\t\t\t\tpublishedDay()\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn publishedDay();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (city) {\n\t\t\t\t\tif (text) {\n\t\t\t\t\t\treturn textResult && getByCity;\n\t\t\t\t\t} else if (jobType) {\n\t\t\t\t\t\treturn typeOfJobs && getByCity;\n\t\t\t\t\t} else if (date) {\n\t\t\t\t\t\treturn getByCity && publishedDay();\n\t\t\t\t\t} else if (text && jobType) {\n\t\t\t\t\t\treturn textResult && typeOfJobs && getByCity;\n\t\t\t\t\t} else if (text && jobType && date) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\ttextResult &&\n\t\t\t\t\t\t\ttypeOfJobs &&\n\t\t\t\t\t\t\tpublishedDay() &&\n\t\t\t\t\t\t\tgetByCity\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn getByCity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.sort((a, b) => {\n\t\t\t\treturn new Date(a.postDetail.published) <\n\t\t\t\t\tnew Date(b.postDetail.published)\n\t\t\t\t\t? 1\n\t\t\t\t\t: -1;\n\t\t\t})\n\t);\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles((theme) => ({\n\t\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 123,\n\t},\n}));\n\nconst Dropdown = (props) => {\n\tconst classes = useStyles();\n\tconst [open, setOpen] = React.useState(false);\n\n\treturn (\n\t\t<>\n\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t<InputLabel id='demo-controlled-open-select-label'>\n\t\t\t\t\t{props.title}\n\t\t\t\t</InputLabel>\n\t\t\t\t<Select\n\t\t\t\t\tlabelId='demo-controlled-open-select-label'\n\t\t\t\t\tid='demo-controlled-open-select'\n\t\t\t\t\topen={open}\n\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\tsetOpen(false);\n\t\t\t\t\t}}\n\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={props.handleChange}>\n\t\t\t\t\t{props.options.map((item, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<MenuItem key={index} value={item}>\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t{item}{' '}\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</>\n\t);\n};\n\nexport default Dropdown;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n\tsortbyJobType,\n\tsortByPublishedDay,\n\tsortbyCity,\n} from '../redux/actions/filters';\nimport moment from 'moment';\nimport SavedJobs from '../components/savedJobs';\nimport JobPostList from '../components/jobPostList';\nimport Entete from '../components/entete';\nimport selectData from '../redux/selectors/sortJob';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '../components/select';\nimport './styles/annonser.scss';\nimport Button from '../components/button'\nconst Annonser = (props) => {\n\tconst [city, setCity] = useState('');\n\tconst [type, setType] = useState('');\n\tconst [published, setPublished] = useState('');\n\treturn (\n\t\t<>\n\t\t\t<Entete\n\t\t\t\ttitle={`Hittade: ${props.results.length}`}\n\t\t\t\tonSubmit={() => {}}\n\t\t\t/>\n\t\t\t<Grid container justify='center' className='annonsWrapper'>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tjustify='center'\n\t\t\t\t\t\tclassName='dropdownContainer'>\n\t\t\t\t\t\t<Grid  item className='dropdown'>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\ttitle='Stad'\n\t\t\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\t\t\thandleChange={(event) => {\n\t\t\t\t\t\t\t\t\tconsole.log(event.target.value);\n\t\t\t\t\t\t\t\t\tsetCity(event.target.value);\n\t\t\t\t\t\t\t\t\tif (event.target.value === 'All') {\n\t\t\t\t\t\t\t\t\t\tprops.dispatch(\n\t\t\t\t\t\t\t\t\t\t\tsortbyCity({ city: '' })\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tprops.dispatch(\n\t\t\t\t\t\t\t\t\t\t\tsortbyCity({\n\t\t\t\t\t\t\t\t\t\t\t\tcity: event.target.value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t'All',\n\t\t\t\t\t\t\t\t\t'Umeå',\n\t\t\t\t\t\t\t\t\t'Gävle',\n\t\t\t\t\t\t\t\t\t'Stockholm',\n\t\t\t\t\t\t\t\t\t'Trollhättan',\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid  className='dropdown'>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\ttitle='Omfattning'\n\t\t\t\t\t\t\t\tvalue={type}\n\t\t\t\t\t\t\t\thandleChange={(event) => {\n\t\t\t\t\t\t\t\t\tsetType(event.target.value);\n\t\t\t\t\t\t\t\t\tif (event.target.value === 'All') {\n\t\t\t\t\t\t\t\t\t\tprops.dispatch(\n\t\t\t\t\t\t\t\t\t\t\tsortbyJobType({ jobType: '' })\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tprops.dispatch(\n\t\t\t\t\t\t\t\t\t\t\tsortbyJobType({\n\t\t\t\t\t\t\t\t\t\t\t\tjobType: event.target.value,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\toptions={['All', 'Heltid', 'Deltid']}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid  className='dropdown'>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\ttitle='Publicerad'\n\t\t\t\t\t\t\t\tvalue={published}\n\t\t\t\t\t\t\t\thandleChange={(event) => {\n\t\t\t\t\t\t\t\t\tsetPublished(event.target.value);\n\n\t\t\t\t\t\t\t\t\tif (event.target.value === 'Today') {\n\t\t\t\t\t\t\t\t\t\tconst day = moment()\n\t\t\t\t\t\t\t\t\t\t\t.format()\n\t\t\t\t\t\t\t\t\t\t\t.substr(0, 10);\n\t\t\t\t\t\t\t\t\t\tprops.dispatch(\n\t\t\t\t\t\t\t\t\t\t\tsortByPublishedDay({\n\t\t\t\t\t\t\t\t\t\t\t\tpublished: [day, 'today'],\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\t\tevent.target.value === 'Last 7 days'\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tconst day = moment().subtract(\n\t\t\t\t\t\t\t\t\t\t\t7,\n\t\t\t\t\t\t\t\t\t\t\t'days'\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tconst day_7 = day\n\t\t\t\t\t\t\t\t\t\t\t.format()\n\t\t\t\t\t\t\t\t\t\t\t.substr(0, 10);\n\n\t\t\t\t\t\t\t\t\t\tprops.dispatch(\n\t\t\t\t\t\t\t\t\t\t\tsortByPublishedDay({\n\t\t\t\t\t\t\t\t\t\t\t\tpublished: [day_7, 'last_7_days'],\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\t\tevent.target.value === 'Last 30 days'\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tconst day = moment().subtract(\n\t\t\t\t\t\t\t\t\t\t\t30,\n\t\t\t\t\t\t\t\t\t\t\t'days'\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tconst day_30 = day\n\t\t\t\t\t\t\t\t\t\t\t.format()\n\t\t\t\t\t\t\t\t\t\t\t.substr(0, 10);\n\t\t\t\t\t\t\t\t\t\tprops.dispatch(\n\t\t\t\t\t\t\t\t\t\t\tsortByPublishedDay({\n\t\t\t\t\t\t\t\t\t\t\t\tpublished: [\n\t\t\t\t\t\t\t\t\t\t\t\t\tday_30,\n\t\t\t\t\t\t\t\t\t\t\t\t\t'last_30_days',\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else if (event.target.value === 'All') {\n\t\t\t\t\t\t\t\t\t\tprops.dispatch(\n\t\t\t\t\t\t\t\t\t\t\tsortByPublishedDay({\n\t\t\t\t\t\t\t\t\t\t\t\tpublished: ['', 'all'],\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t'All',\n\t\t\t\t\t\t\t\t\t'Today',\n\t\t\t\t\t\t\t\t\t'Last 7 days',\n\t\t\t\t\t\t\t\t\t'Last 30 days',\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} className='savedJob'>\n\t\t\t\t\t<SavedJobs />\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={12}>\n                    <JobPostList results={props.results} text={'Spara'} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nconst mapPropsToTheState = (state) => {\n\treturn {\n\t\tresults: selectData(state.results, state.filter),\n\t};\n};\n\nexport default connect(mapPropsToTheState)(Annonser);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addToSaved } from '../redux/actions/savedJobs';\nimport SavedJobs from '../components/savedJobs';\nimport Button from '../components/button';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport '../pages/styles/jobPost.scss';\nconst PostedJob = (props) => {\n\treturn (\n\t\t<div className='jobPostPage'>\n\t\t\t<div className='btnContainer'>\n\t\t\t\t<div className='back'>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttext={'Till resultaten'}\n\t\t\t\t\t\taction={() => {\n\t\t\t\t\t\t\tprops.history.push('/annonser');\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='savedJobs'>\n\t\t\t\t\t<SavedJobs />\n\t\t\t\t</div>\n            </div>\n            \n\t\t\t<div className='jobPostWrapper'>\n\t\t\t\t<Paper>\n\t\t\t\t\t<Card variant='outlined'>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant='h4'\n\t\t\t\t\t\t\t\tcomponent='h3'\n\t\t\t\t\t\t\t\tclassName='boldTitle'>\n\t\t\t\t\t\t\t\t{props.result.jobPositionTitle.title}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant='h4' component='h3'>\n\t\t\t\t\t\t\t\t{props.result.hiringOrg.name}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant='h5' component='h2'>\n\t\t\t\t\t\t\t\t{props.result.jobPositionTitle.title}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography style={{ margin: '3px' }}>\n\t\t\t\t\t\t\t\t{`Kommun: ${props.result.jobPositionLocation.city}`}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography style={{ margin: '3px' }}>\n\t\t\t\t\t\t\t\t{`Varaktighet: ${props.result.classification.duration}`}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t{`Anställningsform: ${props.result.classification.TypeOfEmployment}`}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Paper className='elevatedCard' elevation={3}>\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<h2 className='boldTitle'>\n\t\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\t\tKvalifikationer{' '}\n\t\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t\t{props.result\n\t\t\t\t\t\t\t\t\t\t\t\t.qualificationsRequiredSummary\n\t\t\t\t\t\t\t\t\t\t\t\t.education && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{`- ${props.result.qualificationsRequiredSummary.education}`}{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t{props.result\n\t\t\t\t\t\t\t\t\t\t\t\t.qualificationsRequiredSummary\n\t\t\t\t\t\t\t\t\t\t\t\t.hasExperience.type && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{`- ${props.result.qualificationsRequiredSummary.hasExperience.type}`}\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{props.result\n\t\t\t\t\t\t\t\t\t\t\t\t.qualificationsRequiredSummary\n\t\t\t\t\t\t\t\t\t\t\t\t.hasDriverLicence.category && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{` - Driver licence: ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.result\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.qualificationsRequiredSummary\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.hasDriverLicence\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.category || 'ingen'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h2 className='boldTitle'>Om jobbet :</h2>\n\t\t\t\t\t\t\t\t\t<p className='description'> {props.result.jobPositionPurpose.purpose} </p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h2 className='boldTitle'>\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\tOm anställningen :{' '}\n\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t{`Lön: ${props.result.compensation.salaryType}`}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h2 className='boldTitle'> Adress : </h2>\n\t\t\t\t\t\t\t\t\t{props.result.hiringOrgContact.addressLine}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h2 className='boldTitle'>Publicerat: </h2>\n\t\t\t\t\t\t\t\t\t{props.result.postDetail.published}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</CardContent>\n\n\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttext={'Spara'}\n\t\t\t\t\t\t\t\taction={() => {\n\t\t\t\t\t\t\t\t\tconst savedJobs = JSON.parse(\n\t\t\t\t\t\t\t\t\t\tlocalStorage.getItem('savedJobs')\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tconst check = savedJobs.filter(\n                                        (element) =>\n                                            element.identifier ===\n                                            props.result.identifier\n                                    );\n\n                                    if (check.length === 0) {\n                                        const toAdd = savedJobs;\n                                        props.dispatch(addToSaved(props.result));\n\n                                        toAdd.push(props.result);\n                                        localStorage.setItem(\n                                            'savedJobs',\n                                            JSON.stringify(toAdd)\n                                        );\n                                    } else {\n                                        return alert('Redan sparade');\n                                    }\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t</Card>\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t\t);\n\t\t</div>\n\t);\n};\n\nconst mapPropsTo = (state, props) => {\n\treturn {\n\t\tresult: state.results.find((element) => {\n\t\t\treturn element.identifier === props.match.params.id;\n\t\t}),\n\t};\n};\n\nexport default connect(mapPropsTo)(PostedJob);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport '../pages/styles/header.scss';\n\nexport default function ButtonAppBar() {\n\treturn (\n\t\t<AppBar className='AppBar' position='static' elevation={0}>\n\t\t\t<Toolbar>\n\t\t\t\t<NavLink to='/' className='link'>\n\t\t\t\t\tKerJa\n\t\t\t\t</NavLink>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './firebase/index';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport store from './redux/store/index';\nimport history from './services/history';\nimport Landing from './pages/landing';\nimport Annonser from './pages/annonser';\nimport JobPost from './pages/showClickedOnJob';\nimport MyHeader from './components/header';\nimport Container from '@material-ui/core/Container';\nimport './index.scss';\n\nconst storage = store();\n\nfunction App() {\n\treturn (\n\t\t<Provider store={storage}>\n\t\t\t<CssBaseline />\n\t\t\t<Container maxWidth='lg'>\n\t\t\t\t<Router history={history}>\n\t\t\t\t\t<MyHeader />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path='/' exact component={Landing} />\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/annonser'\n\t\t\t\t\t\t\t\tcomponent={Annonser}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{<Route path='/annonser/:id' component={JobPost} />}\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</Container>\n\t\t</Provider>\n\t);\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}